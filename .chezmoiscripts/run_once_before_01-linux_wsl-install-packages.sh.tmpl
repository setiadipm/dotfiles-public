{{- if (and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) -}}
#!/bin/bash

printf "\n\n# Installing packages... #\n"

# For installing debian packages when needed
# debian_packages="unzip fd-find"
# printf "    --> Installing $debian_packages...\n"
# sudo apt install -qq -y $debian_packages

sudo add-apt-repository ppa:ondrej/php -y >/dev/null 2>&1

printf "    --> Installing php5.6...\n"
sudo apt install -qq -y php5.6 php5.6-mbstring php5.6-zip php5.6-mysql php5.6-xml php5.6-intl php5.6-cli php5.6-gd php5.6-curl php5.6-sqlite3 >/dev/null 2>&1

printf "    --> Installing php7.4...\n"
sudo apt install -qq -y php7.4 php7.4-mbstring php7.4-zip php7.4-mysql php7.4-xml php7.4-intl php7.4-cli php7.4-gd php7.4-curl php7.4-sqlite3 >/dev/null 2>&1

printf "    --> Installing php8.2...\n"
sudo apt install -qq -y php8.2 php8.2-mbstring php8.2-zip php8.2-mysql php8.2-xml php8.2-intl php8.2-cli php8.2-gd php8.2-curl php8.2-sqlite3 >/dev/null 2>&1

printf "    --> Installing composer...\n"
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer >/dev/null 2>&1

printf "    --> Installing apache2...\n"
sudo apt install -qq -y apache2 >/dev/null 2>&1
sudo a2enmod rewrite >/dev/null 2>&1

sudo mkdir -p ~/.local/bin >/dev/null
brew_packages=(
  "eza"
  "fd"
  "fnm"
  "go"
  "jandedobbeleer/oh-my-posh/oh-my-posh"
  "lazygit"
  "neovim"
  "ripgrep"
  "unzip"
  "z"
)
for package in "${brew_packages[@]}"; do
  printf "    --> Installing $package...\n"
  brew install -q "$package" >/dev/null 2>&1
done

NPM_LATEST=v18.19.0 >/dev/null
printf "    --> Installing npm $NPM_LATEST as default...\n"
fnm use $NPM_LATEST --log-level quiet --install-if-missing >/dev/null
fnm_versions=(
  "v10.24.1"
  "v14.21.3"
  "v16.20.2"
)
for version in "${fnm_versions[@]}"; do
  printf "    --> Installing npm $version...\n"
  fnm install --log-level quiet $version >/dev/null
done
fnm default $NPM_LATEST >/dev/null

go_packages=(
  "gofumpt mvdan.cc/gofumpt@latest"
  "goimports-reviser github.com/incu6us/goimports-reviser/v3@latest"
  "golangci-lint github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.2"
  "air-live-reloading github.com/cosmtrek/air@latest"
)
for package_info in "${go_packages[@]}"; do
  package_name="${package_info%% *}"
  package_path="${package_info#* }"
  printf "    --> Installing $package_name...\n"
  go install "$package_path" >/dev/null 2>&1
done

printf "\n\n# Creating working directories... #\n"
working_dirs=(
  "$HOME/go/src"
  "$HOME/angular"
  "$HOME/flutter"
  "$HOME/docker"
  "/var/www"
)
for dir in "${working_dirs[@]}"; do
  printf "    --> Creating $dir...\n"
  sudo mkdir -p $dir >/dev/null
  sudo chown -R 1000:1000 $dir >/dev/null
done

printf "\n"
{{- end -}}
